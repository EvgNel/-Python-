
Задача 1
Оформляйте ноутбук, используя эти советы:

Номер задачи - заголовок 2
Номер подзадачи - заголовок 3
Предоставленные наборы данных оформляйте, как код
Задача 2
На складе лежат разные фрукты в разном количестве.
Нужно написать функцию, которая на вход принимает любое количество названий фруктов и их количество, а возвращает общее количество фруктов на складе, при помощи использования kwargs

[2]
def fruits(**kwargs):
    
    total_fruits = sum(kwargs.values())
    
    return f'Total fruits: {total_fruits}'
[3]
print(fruits(apples=10, pears=5, bananas=4))
Total fruits: 19

Задача 3
Дан список с затратами на рекламу. Но в данных есть ошибки, некоторые затраты имеют отрицательную величину. Удалите такие значения из списка и посчитайте суммарные затраты
[100, 125, -90, 345, 655, -1, 0, 200]
Используйте list comprehensions

[5]
def expenses(data: list):
    
    new_data = []
    
    for i in data:
        if i > 0:
            new_data.append(i)
            
    print(new_data)
    print(f'Total expenses: {sum(new_data)}')
[6]
data = [100, 125, -90, 345, 655, -1, 0, 200]

expenses(data)
[100, 125, 345, 655, 200]
Total expenses: 1425

[7]
print([i for i in data if i > 0 ])
[100, 125, 345, 655, 200]

[8]
print(f'Total expenses: {sum([i for i in data if i > 0 ])}')
Total expenses: 1425

Задача 4
Даны два списка.
Дата покупки
['2021-09-14', '2021-12-15', '2021-09-08', '2021-12-05', '2021-10-09', '2021-09-30', '2021-12-22', '2021-11-29', '2021-12-24', '2021-11-26', '2021-10-27', '2021-12-18', '2021-11-09', '2021-11-23', '2021-09-27', '2021-10-02', '2021-12-27', '2021-09-20', '2021-12-13', '2021-11-01', '2021-11-09', '2021-12-06', '2021-12-08', '2021-10-09', '2021-10-31', '2021-09-30', '2021-11-09', '2021-12-13', '2021-10-26', '2021-12-09']
Суммы покупок по датам
[1270, 8413, 9028, 3703, 5739, 4095, 295, 4944, 5723, 3701, 4471, 651, 7037, 4274, 6275, 4988, 6930, 2971, 6592, 2004, 2822, 519, 3406, 2732, 5015, 2008, 316, 6333, 5700, 2887]

Задача 4.1
Найдите, какая выручка у компании в ноябре
Используйте list comprehensions

[9]
date = ['2021-09-14', '2021-12-15', '2021-09-08', '2021-12-05', '2021-10-09', 
        '2021-09-30', '2021-12-22', '2021-11-29', '2021-12-24', '2021-11-26', 
        '2021-10-27', '2021-12-18', '2021-11-09', '2021-11-23', '2021-09-27', 
        '2021-10-02', '2021-12-27', '2021-09-20', '2021-12-13', '2021-11-01', 
        '2021-11-09', '2021-12-06', '2021-12-08', '2021-10-09', '2021-10-31', 
        '2021-09-30', '2021-11-09', '2021-12-13', '2021-10-26', '2021-12-09']
cost = [1270, 8413, 9028, 3703, 5739, 4095, 295, 4944, 5723, 3701, 
        4471, 651, 7037, 4274, 6275, 4988, 6930, 2971, 6592, 2004, 
        2822, 519, 3406, 2732, 5015, 2008, 316, 6333, 5700, 2887]
[10]
def november(data1: list, data2: list) -> list:
    
    new_data = []
    
    for i in range(len(data1)-1):
        if '-11-' in data1[i]:
            new_data.append(data2[i])
            
    return new_data
[11]
print(november(date, cost))
print(f'Profit: {sum(november(date, cost))}')
[4944, 3701, 7037, 4274, 2004, 2822, 316]
Profit: 25098

[12]
print([cost[i] for i in range(0, len(date)-1) if "-11" in date[i]])
print(f'Profit: {sum([cost[i] for i in range(len(date)-1) if "-11" in date[i]])}')
[4944, 3701, 7037, 4274, 2004, 2822, 316]
Profit: 25098

Задача 4.2
Найдите выручку компании в зависимости от месяца
Для этого напишите функцию, которая на вход принимает список с датами и список с выручкой, а на выходе словарь, где ключи - это месяцы, а значения - это выручка.
Используйте аннотирование типов.

[13]
def profits(data1: list, data2: list) -> dict:
    
    profits = {}
    
    for i in range(len(data1)):
        
        if date[i].split('-')[1] in profits.keys():
            profits[date[i].split('-')[1]] += cost[i]
        else:
            profits[date[i].split('-')[1]] = cost[i]
            
    return profits

print(profits(date, cost))
{'09': 25647, '12': 45452, '10': 28645, '11': 25098}

